<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo建站美化笔记]]></title>
    <url>%2F2018%2F07%2F25%2FHexo%E5%BB%BA%E7%AB%99%E7%BE%8E%E5%8C%96%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[最近开始玩博客next 5.1.7 旧版版本 NexT v5.1.x 更新，后面运行 hexo g 的时候老提示我升级，有强迫症的我又重新搭建了一下博客，升级到nexT主题更新到6.3.0备忘！！！下面是对hexo、nexT的配置文件进行详细的记录。这次准备把所用到的各个字段都进行记录，便于以后出现意外情况再次重建。hexo-theme-next Ps：每篇文章还弄了摘要格式！好累~~文章有点长来首音乐舒舒压 基本配置语言设置每个主题都会配置几种界面显示语言，修改语言只要编辑站点配置文件，找到 language 字段，并将其值更改为你所需要的语言(例如，简体中文)： language: zh-CN 网站标题、作者打开站点配置文件，修改这些值： 1234title: #博客标题subtitle: #博客副标题description: #博客描述author: #博客作者 注意： 配置文件要符合英文标点符号使用规范: 冒号后必须空格，否则会编译错误 域名与文章链接123456# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: #你的博客网址root: / #博客跟目录，如果你的博客在网址的二级目录下，在这里填上permalink: :year/:month/:day/:title/ # 文章链接permalink_defaults: 用于配置Url请求时的主要属性(此处用于记录，还未配置)。Url这块我进行了优化，安装了hexo-abbrlink插件：让文章链接唯一化。在hexo根目录下执行$ npm install hexo-abbrlink –save 123456789101112131415161718# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: #站点urlenforce_ssl: #强制使用sslroot: #站点目录permalink: archives/:abbrlink.html #站点链接设置abbrlink: #abbrlink设置 alg: crc32 # 算法：crc16(default) and crc32 rep: hex # 进制：dec(default) and hex ## crc16 &amp; hex ## https://iassas.com/posts/66c8.html ## crc16 &amp; dec ## https://iassas.com/posts/65535.html ## crc32 &amp; hex ## https://iassas.com/posts/8ddf18fb.html ## crc32 &amp; dec ## https://iassas.com/posts/1690090958.htmlpermalink_defaults: 安装启用主题使用hexo init本地新建一个博客之后，下载最新的next主题。 12$ cd hexo$ git clone https://github.com/theme-next/hexo-theme-next themes/next GitHub安装说明 安装后，我们要启用我们安装的主题，与所有Hexo主题启用的模式一样。 当克隆/下载完成后，打开站点配置文件， 找到 theme 字段，并将其值更改为 next 。 1theme: next 主题风格NexT 主题目前提供了3中风格类似，但是又有点不同的主题风格，可以通过修改 主题配置文件 中的 Scheme 值来启用其中一种风格，例如我的博客用的是 Pisces 风格，只要把另外两个用#注释掉即可: 1234# Schemes#scheme: Muse#scheme: Mistscheme: Pisces 导航栏添加标签菜单新建标签页面，并在菜单中显示标签链接。标签页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。 (1) 在终端窗口下，定位到 Hexo 站点目录下。使用如下命令新建一名为 tags 页面: 1hexo new page "tags" (2) 编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下： 123title: 标签date: 2017-12-22 12:39:04type: "tags" (3) 在菜单中添加链接。编辑 主题配置文件 ，添加 tags 到 menu 中，如下: 1234menu: home: / archives: /archives tags: /tags (4) 使用时在你的文章中添加如下代码： 1234567---title: title namedate: 2017-12-12-22 12:39:04tags: - first tag - second tag--- 为了省事方便可以在hexo目录下\scaffolds\post.md添加相关的信息，每次打开新的页面，自动输入信息。根据需求自行修改 1234567891011121314---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;updated: &#123;&#123; date &#125;&#125;photos: tags: categories: toc: truemathjax: truecomments: true---&lt;!--more--&gt; 添加分类页面新建分类页面，并在菜单中显示分类链接。分类页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。 (1) 在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ： 1hexo new page categories (2) 编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。页面内容如下： 12345---title: 分类date: 2014-12-22 12:39:04type: "categories"--- (3) 在菜单中添加链接。编辑 主题配置文件 ， 添加 categories 到 menu 中，如下: 1234menu: home: / archives: /archives categories: /categories (4) 使用时在你的文章中添加如下代码： 12345---title: title namedate: 2017-12-12-22 12:39:04type: "categories"--- 侧边栏社交链接侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中。 (1) 链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址 || 图标： 123social: GitHub: **************** || github E-Mail: **************** || envelope 备注:如果没有指定图标（带或不带分隔符），则会加载默认图标。 (2) 设定链接的图标，对应的字段是 social_icons。其键值格式是: 匹配键: Font Awesome 图标名称， 匹配键与上一步所配置的链接的显示文本相同（大小写严格匹配），图标名称是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标: 1234567# Social Iconssocial_icons: enable: true # Icon Mappings GitHub: github Twitter: twitter 微博: weibo 友情链接编辑 ·主题配置文件· 添加： 友情链接配置示例 1234567# Blog rollslinks_icon: linklinks_title: Linkslinks_layout: block#links_layout: inlinelinks: CSDN: https://*****/***** 站点建立时间这个时间将在站点的底部显示，例如© 2017 - 2018。 编辑 主题配置文件，新增字段 since: 12配置示例since: 2017 开启打赏功能越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 主题配置文件 中填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能： 12345# Rewardreward_comment: 如果文章内容对你有帮助,您的支持将鼓励我继续创作！wechatpay: /images/wechatpay.jpgalipay: /images/alipay.jpg#bitcoin: /images/bitcoin.png 设置阅读全文在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 阅读全文 按钮，可以通过以下方法：(1) 在文章中使用 &lt;!-- more --&gt; 手动进行截断，Hexo 提供的方式 推荐(2) 在文章的 front-matter 中添加 description，并提供文章摘录(3) 自动形成摘要，在 主题配置文件 中添加： 123auto_excerpt: enable: true length: 150 默认截取的长度为 150 字符，可以根据需要自行设定 建议使用 &lt;!-- more --&gt;（即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。 修改文章底部的那个带#号的标签修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成 &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 站内搜索NexT 支持集成 Swiftype、 微搜索、Local Search 和 Algolia。在这里我使用的是Local Search，下面将介绍如何使用: (1) 添加百度/谷歌/本地 自定义站点内容搜索，安装 hexo-generator-searchdb，在站点的根目录下执行以下命令： 1npm install hexo-generator-searchdb --save (2) 编辑 站点配置文件，添加文件： 123456#Local Searchsearch: path: search.xml field: post format: html limit: 10000 (3) 编辑 主题配置文件，启用本地搜索功能： 123# Local searchlocal_search: enable: true 其他搜索方式请查看搜索服务 文章图片博客首页文章摘要显示图片给文章的Front-matter添加photos字段。例如： 123456title: Fiddler断点调试date: 2018-01-25 14:08:12tags: categories: updated:photos: '' #自己的图片地址 添加了photos字段后，在博客首页就会显示对应的图片。每个标签的含义可以参考：Hexo官方文档 文章插入图片利用标签引用（hexo3以上的版本） 本站采用标签引用方式 对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 config.yml 文件中的 post_asset_folder 选项设为 true 来打开。 12_config.ymlpost_asset_folder: true 当资源文件管理功能打开后，Hexo将会在你每一次通过 hexo new [layout] &lt;title&gt; 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。 相对路径引用的标签插件 通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。 123&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; 比如说：当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法![](/example.jpg)，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作） 正确的引用图片方式是使用下列的标签插件而不是 markdown ： 1&#123;% asset_img example.jpg This is an example image %&#125; 通过这种方式，图片将会同时出现在文章和主页以及归档页中。 利用makdown引用（hexo3以下的版本）安装 1npm install hexo-asset-image --save 之后就可以按照正常的方法使用的，比如： 1我现在写了一个段落，并且想在这个段落的某一个地方[图片上传失败...(image-43fc5f-1510018038370)]引入一张图片 不蒜子统计 备注：此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后 (1) 全局配置。编辑 主题配置文件 中的 busuanzi_count的配置项。当enable: true 时，代表开启全局开关。若 site_uv 、site_pv 、page_pv 的值均为 false 时，不蒜子仅作记录而不会在页面上显示。 (2) 站点UV配置。当 site_uv: true时，代表在页面底部显示站点的UV值。site_uv_header 和 site_uv_footer 为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为 [site_uv_header]UV值[site_uv_footer]。 1234# 效果：本站访客数12345人次site_uv: truesite_uv_header: 本站访客数site_uv_footer: 人次 (3) 站点PV配置。当 site_pv: true时，代表在页面底部显示站点的PV值。site_pv_header 和 site_pv_footer 为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为 [site_pv_header]PV值[site_pv_footer]。 1234# 效果：本站总访问量12345次site_pv: truesite_pv_header: 本站总访问量site_pv_footer: 次 (4) Example: 123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class="fa fa-eye"&gt;&lt;/i&gt; 本站访客数 site_uv_footer: 次 # custom pv span for the whole site site_pv: true site_pv_header: 本站总访问量 site_pv_footer: 次 # custom pv span for one page only page_pv: false page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; page_pv_footer: leancloud阅读次数统计(1) 先在 leancloud 官网上注册账号获取 app_id 、app_key (2) 终端窗口下，定位到 Hexo 站点目录下输入一下命令 1npm install hexo-leancloud-counter-security --save (3) 打开hexo站点文件_config.yml 123456leancloud_counter_security: enable_sync: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt;&gt; username: &lt;&lt;your username&gt;&gt; # Will be asked while deploying if is left blank password: &lt;&lt;your password&gt;&gt; # Recommmended to be left blank. Will be asked while deploying if is left blank (4) 打开next主题文件_config.yml 1234567leancloud_visitors: enable: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt;&gt; # Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security security: true betterPerformance: false symblos_count_time配置用于站点字数、阅读时间统计等。symblos_count_time在6.0.0以上版本替换了word_count，详细配置hexo根目录执行 1$ npm install hexo-symbols-count-time --save （1）站点文件 123456symbols_count_time: symbols: true time: true total_symbols: true total_time: true （2）主题文件 123456symbols_count_time: separated_meta: true item_text_post: true item_text_total: false awl: 4 wpm: 275 优化加载速度为了提高网站的加载速度，使用gulp对博文中的js、css、img等文件进行压缩。在博客的根目录执行以下命令 12$ npm install gulp -g$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save 然后在根目录中新建文件 gulpfile.js，并填入以下内容 123456789101112131415161718192021222324252627282930313233var gulp = require('gulp');var minifycss = require('gulp-minify-css');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');// 压缩 public 目录 cssgulp.task('minify-css', function() &#123; return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public'));&#125;);// 压缩 public 目录 htmlgulp.task('minify-html', function() &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public'))&#125;);// 压缩 public/js 目录 jsgulp.task('minify-js', function() &#123; return gulp.src('./public/**/*.js') .pipe(uglify()) .pipe(gulp.dest('./public'));&#125;);// 执行 gulp 命令时执行的任务gulp.task('default', [ 'minify-html','minify-css','minify-js']) 生成博文是执行hexo g &amp;&amp; gulp就会根据gulpfile.js中的配置，对public目录中的静态资源文件进行压缩。 评论系统来必力首先要注册来必力帐号，并获取用户的UID（查看具体方法）。然后打开主题目录的配置文件/next/_config.yml，定位到livere_uid字段，将UID填入即可 12345 # Support for LiveRe comments system. # You can get your uid from https://livere.com/insight/myCode (General web site) #livere_uid: your uid livere_uid: MTAyMC8z111111111 #例如至此，其他人就可以使用评论系统进行评论。 Valine来必力是韩国人开发的评论系统，一方面国内加载速度慢，另一方面评论需要登录，因此自己将博客的评论系统更换为Valine。有关Valine可以参考官方文档与原作者的博客：Valine – 一款极简的评论系统。 为 Hexo 博客 Next 主题添加 Valine 系统可以参考博客为你的 Hexo 加上评论系统-Valine。 主要有以下步骤： 到 LeanCloud 官网注册一个帐号 登录LeanCloud帐号，创建一个app应用，名字随便写 将App Id 和 App Key 配置到主题的配置文件valine字段下 12345678910valine: enable: true appid: your app id # your leancloud application appid appkey: your app key # your leancloud application appkey notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: ヾﾉ≧∀≦)o来啊，快活啊! avatar: mm # gravatar style guest_info: nick,mail,link # custom comment header pageSize: 10 # pagination size 注意：不同版本的主题app_id 和 app_key 这两个字段名是不一样的，复制的时候一定要看清楚。5.1.3版本字段名称是：appid 、appkey， 6.0.1版本的字段名称是：app_id、app_key。 底部版权声明 直接在next主题文件吧 false 改为 true 1234# Declare license on postspost_copyright: enable: true license: &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="external nofollow" target="_blank"&gt;CC BY-NC-SA 4.0&lt;/a&gt; FancyBox——jQuery弹出窗口插件 FancyBox是一款基于jquery开发的类Lightbox插件。支持对放大的图片添加阴影效果，对于一组相关的图片添加导航操作按纽，该lightbox除了能够展示图片之外，还可以展示iframed内容， 通过css自定义外观。 如果之前的是fancybox 2，要先删除fancybox，目录为themes/next/source/lib/fancybox, 下载模块 1$ git clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox 在next主题_config.yml中 false 改为 true 12345# Fancybox. There is support for old version 2 and new version 3.# Please, choose only any one variant, do not need to install both.# For install 2.x: https://github.com/theme-next/theme-next-fancybox# For install 3.x: https://github.com/theme-next/theme-next-fancybox3fancybox: true 添加热度NexT主题集成leanCloud，打开/themes/next/layout/_macro/post.swig， 搜索leancloud-visitors-count， 添加以下内容： 12&lt;span class="leancloud-visitors-count"&gt;&lt;/span&gt; // 在此处后面添加&lt;span&gt;℃&lt;/span&gt; 打开/themes/next/languages/zh-Hans.yml， 将visitors的内容改为热度即可。 文章加密功能 二选一，自由选择 (1)hexo-encypt配置用于文章加密。启用文章加密需要安装hexo-blog-encrypt，在hexo根目录下执行 1npm install hexo-blog-encrypt --save 找到根目录下的_config.yml文件，添加如下： 123# Securityencrypt: enable: true 启用加密功能需要在文章的Front-matter部分添加password字段即可。建议修改post.md模版，目录为hexo\scaffolds\。 123456789---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags: categories: password: #文章密码abstract: #文章摘要message: #密码提示--- 官方文档说明 (2)打开/themes/next/layout/_partials/head.swig， 在meta标签后面插入这样一段代码： 12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 然后文章中添加：password: 00000如下： 12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags: categories: password: #文章密码--- 如果 password 后面为空，则表示不用密码。 live2d配置用于站点吉祥物设置，作用应该是美化站点吧。手动/斜眼笑！想要吉祥物的话需要先安装hexo-helper-live2d，在hexo根目录下执行 1$ npm install --save hexo-helper-live2d Hexo的 _config.yml 文件或主题的 _config.yml 文件中添加配置. 12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false debug: false model: use: live2d-widget-model-wanko display: position: right width: 150 height: 300 mobile: show: true 详情请看官方文档。 footer设置 用于页脚设置，nexT6.3.0可以在配置文件中设置页脚。以前用5.X的时候，需要自己手工去修改。所以及时更新很重要哦。 1234567891011121314151617181920212223242526272829303132footer: # Specify the date when the site was setup. # If not defined, current year will be used. #since: 2015 # Icon between year and copyright info. icon: heart # Icon name in fontawesome, see: https://fontawesome.com/v4.7.0/icons # `heart` is recommended with animation in red (#ff0000). name: user # If you want to animate the icon, set it to true. animated: false # Change the color of icon, using Hex Code. color: "#808080" # If not defined, will be used `author` from Hexo main config. copyright: # #------------------------------------------------------ powered: # Hexo link (Powered by Hexo). enable: true # Version info of Hexo after Hexo link (vX.X.X). version: true theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false # ------------------------------------------------------------- # Any custom text can be defined here. #custom_text: Hosted by &lt;a target="_blank" rel="external nofollow" href="https://pages.coding.me"&gt;&lt;b&gt;Coding Pages&lt;/b&gt;&lt;/a&gt; Code Highlight theme设置用于代码主题设置。先在站点目录设置_config.yml 12345highlight: enable: true line_number: true auto_detect: true tab_replace: 再到主题目录设置_config.yml 1highlight_theme: night 数学代码设置 后期应该会用 KaTeX 替代 MathJax Next主题中已集成hexo-renderer-marked插件，直接通过将主题 _config.yml 文件中搜索 math 选项enable设为 true 来打开方可。 1234567math: enable: true # Default(true) will load mathjax/katex script on demand # That is it only render those page who has 'mathjax: true' in Front Matter. # If you set it to false, it will load mathjax/katex srcipt EVERY PAGE. per_page: true 别着急，这样还不够，还需要在文章的Front-matter里打开mathjax开关，如下： 123456---title: index.htmldate: 2018-07-23 21:01:30tags:mathjax: true-- 参考博客 hexo的next主题个性化教程:打造炫酷网站 Hexo博客Next主题优化总结 Hexo搭建博客教程 总结 配置文件字段名和字段值中间需要空格;部分插件安装、配置Hexo、nexT都需进行；文章中存在特殊符号，需要使用三个单引号以代码形式，不然会报错；所有配置文件icon都可以在fontawesome选择心仪的，替换即可；]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo的第一篇博客]]></title>
    <url>%2F2018%2F07%2F16%2FHexo%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[前言 开始Hexo的第一篇文章，创建博客的时间已经有两年的时间，从WordPress到Hexo给我的感觉真的轻便了很多，可能是我的WordPress装的插件太多，写了几篇文章就丢在那里了。（职业懒癌），与此同时还要多了解Markdown写法。 1、之前的 Wordpress 的文章并不打算迁移过来了，因为文章并不多，打算自己重新手敲一遍 2、服务器计划作为其他用途 3、练练Markdown的写法]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Life</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
