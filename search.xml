<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[解决Centos提示At-least-xMB-more-space-needed-on-the-/boot-filesystem的方法]]></title>
    <url>%2Fposts%2FResolve-Disk-Requirements-At-least-xMB-more-space-needed-on-the-%2Fboot-filesystem%2F</url>
    <content type="text"><![CDATA[Centos 终端输入 yum update 出现问题 Disk Requirements: At least 11MB more space needed on the / filesystem. linux 空间不够了，怎么办？ 升级下载内核 查看空间多少: df -h 查看当期内核: uname -r 查找内核: rpm -qa | grep kernel 删除多余的内核(根据实际情况): yum remove ************ 删除系统日志: rm -rf /var/log/* 删除 rm -rf /usr/local/src 注意这里可能存在你安装的文件(不建议操作) 选择新内核 系统里已经安装了最新的内核，但却没有适用 列出内核命令 awk -F\&apos; &apos;$1==&quot;menuentry &quot; {print i++ &quot; : &quot; $2}&apos; /boot/grub2/grub.cfg 如下 [root@host ~]# awk -F\&apos; &apos;$1==&quot;menuentry &quot; {print i++ &quot; : &quot; $2}&apos; /boot/grub2/grub.cfg 0 : CentOS Linux (4.20.2-1.el7.elrepo.x86_64) 7 (Core) 1 : CentOS Linux (4.19.6-1.el7.elrepo.x86_64) 7 (Core) 2 : CentOS Linux 7 Rescue afe1648ff2e4685a148863ca2b3856e6 (3.10.0-957.1.3.el7.x 86_64) 3 : CentOS Linux (3.10.0-957.1.3.el7.x86_64) 7 (Core) 4 : CentOS Linux (0-rescue-bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb) 7 (Core) 确认内核（选择数字） #grub2-set-default 数字 grub2-set-default 0 确认 grub2-editenv list 重启 reboot]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[本地MySQL恢复阿里云RDS数据]]></title>
    <url>%2Fposts%2FLocal-MySQL-Restores-Alibaba-Cloud-RDS-Data%2F</url>
    <content type="text"><![CDATA[本地恢复RDS数据，查阅官方和网民的相关博客走了挺多的坑，完整恢复如下 在查询和统计导出过程中window电脑会爆内存，导出数据不完整。MAC电脑没有问题。 计算机配置 CPU: I5-6500 内存：16GB DDR4 硬盘：1T 数据量：300GB 工具 下载相应的数据库版本 RDS MySQL 使用开源软件 percona-Xtrabackup 对MySQL 数据库进行备份。需要下载该软件，然后使用该软件进行恢复。 下载percona-toolkit 下载解压工具 rds_backup_extract (sh 文件)，目前只支持 64 位 Linux 系统。 安装 创建data目录 mkdir -p /home/mysql/data 解压RDS备份文件 bash rds_backup_extract.sh -f &lt;数据备份文件名&gt;.tar.gz -C /home/mysql/data f 指定要解压的备份集文件# -C 指定解压到的目录；-C 参数是可选的，如果不指定就解压到当前目录，如 bash rds_backup_extract -f backup.tar.gz 安装Percona XtraBackup插件 yum install perl-DBI -y yum install perl-DBD-MySQL -y yum install perl-Time-HiRes -y yum install perl-IO-Socket-SSL –y yum install perl-TermReadKey.x86_64 -y yum install perl-Digest-MD5 -y 安装Percona XtraBackup tar xvf Percona-XtraBackup-8.0.4-rc2c0777-el7-x86_64-bundle.tar cd Percona-XtraBackup-8.0.4-rc2c0777-el7-x86_64-bundle cp bin/innobackupex /usr/bin cp bin/xtrabackup* /usr/bin 安装percona-toolkit rpm -ivh percona-toolkit-3.0.12-1.el7.x86_64.rpm 安装mysql因为RDS是5.6版本，所以本地的mysql数据库要与RDS版本对应。 rpm -ivh http://repo.mysql.com/mysql-community-release-el6-5.noarch.rpm &amp;&amp; yum -y install mysql-server mysql 数据恢复 恢复解压好的备份文件 innobackupex --defaults-file=/home/mysql/data/backup-my.cnf --user=root --apply-log /home/mysql/data 显示 completed OK，即执行成功 打开/home/mysql/data/backup-my.cnf vi /home/mysql/data/backup-my.cnf 注释掉如下参数（阿里帮助文档只说注释掉三行，启动会失败。坑） #innodb_fast_checksum #innodb_page_size #innodb_log_block_size #innodb_log_checksum_algorithm=innodb #rds_encrypt_data=false #innodb_encrypt_algorithm=aes_128_ecb 修改文件夹所属用户为mysql chown -R mysql:mysql /home/mysql/data 启动mysql进程 mysqld_safe --defaults-file=/home/mysql/data/backup-my.cnf --user=mysql --datadir=/home/mysql/data &amp; 查看进程 ps aux|grep mysqld 登录数据库 登录mysql查看数据，默认密码为空 myslq -uroot 使用-A参数，取消预读库中表信息了，提高连接库的速度. mysql -uroot -A 参考链接 RDS for MySQL 物理备份文件恢复到自建数据库 阿里云RDS数据恢复到本地MySQL数据库]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>RDS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AEDE算法加密-libsodium]]></title>
    <url>%2Fposts%2FAEDE-algorithm-encryption%2F</url>
    <content type="text"><![CDATA[互联网信息流太多，安全隐私性也来越重要。 AEDE 算法 AES-256-GCM ChaCha20-Poly1305 ChaCha20-IETF-Poly1305 XChaCha20-IETF-Poly1305 加密信息对比 加密方式 Key 大小 Nonce大小 Block大小 MAC 大小 libsodium版本 AES-256-GCM 256 bits 96 bits 128 bits 128 bits libsodium &gt;= 1.0.4 but requires hardware support. IETF standard; also implemented in many other libraries. ChaCha20-Poly1305 256 bits 64 bits 512 bits 128 bits libsodium &gt;= 0.6.0. Also implemented in {Libre,Open,Boring}SSL. ChaCha20-IETF-Poly1305 256 bits 96 bits 512 bits 128 bits libsodium &gt;= 1.0.4. IETF standard; also implemented in Ring, {Libre,Open,Boring}SSL and other libraries. XChaCha20-IETF-Poly1305 256 bits 192 bits 512 bits 128 bits libsodium &gt;= 1.0.12. 加密方式选择 AES-256-GCM 目前这种结构支持硬件加速，需要Intel SSSE3扩展，以及 aesni 和 pclmul。官方暂无计划将AES-256-GCM通过非硬件技术(即软件层)来实现。 英特尔Westmere处理器（2010年推出）和更新版符合要求，没有计划支持AES-GCM的非硬件加速实现，因为在软件实现中正确减少侧通道伴随着主要的速度权衡，这使得AES-GCM的整个点超过了ChaCha20-Poly1305。 XChaCha20-IETF-Poly1305 Xchacha20-poly1305-ietf 兼容安全与速度，在没有AES指令集的设备上表现良好。 XChaCha20-Poly1305继承了ChaCha20-Poly1305所有优势并将随机文件nonce大小扩展到192位。这种扩展的随机数大小允许安全使用随机数。libsodium中的XChaCha20-Poly1305实现可在所有支持的体系结构中移植。 TipsChaCha20-Poly1305虽然AES-256-GCM在专用硬件上速度非常快，但在非专用硬件上性能要低得多。并且, AES容易受到缓存冲突时间的攻击。 ChaCha20在纯软件方面加密就比AES快得多，在缺乏专用AES硬件的平台上速度比其快三倍。 并且, ChaCha20对定时攻击也不敏感。 Poly1305是一种高速信息验证码。ChaCha20流密码+Poly1305认证的组合的使得其成为了Salsa20-Poly1305加密方式的替代品。其于2015年5月成为IETF官方标准，所以目前很多主流操作系统均以支持ChaCha20-Poly1305。 参考链接https://download.libsodium.org/doc/]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>AEDE</tag>
        <tag>Libsodium</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Danteded Socks5 一键安装脚本]]></title>
    <url>%2Fposts%2FDanteded-Socks5-one-click-installation-script%2F</url>
    <content type="text"><![CDATA[编译还是太麻烦了点，为了方便 telegram 看老司机们开车，就去 github 找了个一键脚本，telegram 的车再也不会错过了。 原地址 中文https://github.com/Lozy/danted/blob/master/README_CN.md 英文https://github.com/Lozy/danted/blob/master/README.md 一键脚本安装 下载 wget --no-check-certificate https://raw.github.com/Lozy/danted/master/install.sh -O install.sh 安装 bash install.sh --port=端口 --user=自己设置用户名 --passwd=设置密码 成功 Dante Server Install Successfuly! 使用说明 命令参数 /etc/init.d/danted {start|stop|restart|status|add|del} 重启sock5 /etc/init.d/danted restart 或者 service danted restart 关闭sock5 /etc/init.d/danted stop 或者 service danted stop 开启sock5 /etc/init.d/danted start 或者 service danted start 查看sock5状态 /etc/init.d/danted status 或者 service danted status 添加SOCK5 PAM用户/修改密码 /etc/init.d/danted add 用户名 密码 删除SOCK5 PAM用户 /etc/init.d/danted del 用户名 配置文件路径/etc/danted/conf/ 日志记录路径 /var/log/danted.*.log danted 帮助命令 danted –help 根据上述产生的 socks5 代理地址如果你在 Telegram 使用的话，直接产生下面的链接就行了 https://t.me/socks?server=你的VPS IP地址&amp;port=端口&amp;user=用户名&amp;pass=密码 删除Dantedservice danted stop rm -rf /etc/danted/ rm -f /etc/init.d/danted]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Socks5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux搭建Socks5代理]]></title>
    <url>%2Fposts%2FLinux-build-Socks5-agent%2F</url>
    <content type="text"><![CDATA[为了能够更好的看老司机开车，编译安装socks5代理(linux) Socks5 SS5 官方网站 1.安装一些依赖组件 yum install gcc openldap-devel pam-devel openssl-devel 2.下载SS5最新版本的源代码 wget http://jaist.dl.sourceforge.net/project/ss5/ss5/3.8.9-8/ss5-3.8.9-8.tar.gz 3.解压后开始编译安装 tar zxvf ./ss5-3.8.9-8.tar.gz cd ss5-3.8.9 ./configure make make install 4.赋予脚本权限 chmod +x /etc/init.d/ss5 5.修改 socks5 配置文件，放开 auth 和 permit 注释 vi /etc/opt/ss5/ss5.conf # 如果需要配置访问权限 auth 0.0.0.0/0 - u permit u 0.0.0.0/0 - 0.0.0.0/0 - - - - - 修改用户密码 vi /etc/opt/ss5/ss5.passwd # 格式为 用户名 密码 username password #例如 user1 123 修改端口 vi /etc/sysconfig/ss5 # SS5_OPTS=&quot; -u root -b 0.0.0.0:8080&quot; 启动服务 service ss5 start 6.随系统启动 chkconfig --add ss5 chkconfig --level 345 ss5 on chkconfig --list | grep ss5]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Socks5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[shadowsocks+obfs+cloudflare]]></title>
    <url>%2Fposts%2Fshadowsocks-obfs-cloudflare%2F</url>
    <content type="text"><![CDATA[此法适合折腾 食材 linux simple-obfs shadowsocks（服务端|客户端） 安装shadowsocks-libev这里直接安装 秋水逸冰 的一键脚本Shadowsocks 一键安装脚本（四合一）,方便快捷。 修改端口目前 cloudflare 对 http 端口只支持如下几个, 需要将 shadowsocks 的端口设置为其中一个 80 8080 8880 2052 2082 2086 2095配置cloudflare直接去 cloudflare 注册个账户, 然后弄个域名添加到 cloudflare, 然后使用主域名或添加一个子域名设置 a 记录, 开启 cloudflare 防护, 然后再 attack 页面将域名的防护等级设置到最低 不建议添加自己做站的域名, 因为可能会被 ban, 建议单独找一个域名, 可以去注册 tk,ml,ga,gq 之类的 如果不想接入 cloudflare 的 ns 的话可以找个 cloudflare 的合作伙伴接入, 这样支持 cname 配置客户端 ss-local 和 shadowsocks 客户端放在同一个目录, 然后运行 shadowsocks 客户端 服务器地址填写 cloudflare 的 ip(ping 在 cloudflare 设置 a 记录的那个域名得到的 ip 即可) 端口填写设置的端口, 加密方式和密码正常填写插件程序填写 obfs-local 插件选项填写 obfs=http;obfs-host=google.com将google.com换成在 cloudflare 设置 a 记录的域名，然后保存之后启动即可 查找IP的方法 找到 cloudflare 的企业用户的网站然后去 ping 一下得到 ip 之后路由追踪一下以下是部分IP1234567891011121314151617104.18.62.1/24 香港hkix.net104.16.35.1/24 香港hkix.net104.16.36.1/24 香港hkix.net104.18.35.1/24 香港hkix.net104.18.36.1/24 香港hkix.net104.16.54.1/24 香港104.16.55.1/24 香港104.18.128.1/24 香港104.18.129.1/24 香港104.18.130.1/24 香港104.18.131.1/24 香港104.18.132.1/24 香港104.19.195.1/24 香港104.19.196.1/24 香港104.19.197.1/24 香港104.19.198.1/24 香港104.19.199.1/24 香港 写在最后此操作利用cloudflare的CDN技术，选择最近的CDN源点加快网络服务，但中国内没有大量的源点，国内以及线路好的机器就不用考虑了，否则会起到反效果，线路较差的机器也可以提高一定的速度。 非常适合博主为避开广大人群选择偏远冷门地区的机器，搜索学术足以🙄(ﾟДﾟ) 此法可在特定时间段使用。 因为CF的体量问题, 免费用户会在特定时间段 走相应便宜网络提供商的对等PEER来节省流量费收费用户的不会变, 不过这个一般用户无感而且大部分人也不知道 CF的IP 是anycast 任播的 你可以理解所有IP都是动态的 IP不和机房绑定, 或者说IP可以绑定任意机房 更换不同的ip，走的线路不完全一样 这种情况你无法直接解析IP 世界加钱触手可及]]></content>
      <categories>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Shadowsocks</tag>
        <tag>Obfs</tag>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[内网穿透]]></title>
    <url>%2Fposts%2FInternal-network-penetration%2F</url>
    <content type="text"><![CDATA[内网穿透即NAT穿透， 本文介绍常规的内网穿透，官网打不开一般被墙（爬墙即可），什么爬墙？？？懂的人自然懂。重要的是——-适合做自己的才是最好的，仁者见仁智者见智。 ngrok官网：secure introspectable tunnels to localhost 描述：主要用途是给网站或者安装开发提供部署环境，但是也同样可以用来进行端口转发。除了官方提供的服务之外，作者也放出了源代码，国内有好心的小伙伴也有自行搭建服务端供大家使用的。建议可以找服务器是在自己地区附近的，响应速度会相对快很多。 frp❤❤官网：A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet. 描述：原理与ngrok是相同的，但服务端需要自己搭建，由于该项目是完全开源的，所以代码安全性较高，目前自用感觉不错，前提是服务端速度足够。 n2n❤❤官网：Peer-to-peer VPN 描述：虚拟局域网，n2n的中央节点服务端是需要自己搭建的。如果中央节点的服务端速度足够，那么速度相当快！ zerotier❤❤❤官网：ZeroTier | Home 描述：虚拟局域网。通过一个公共的服务器，建立一个虚拟局域网，让家里电脑和公司电脑同处于一个虚拟局域网，然后通过分配到的虚拟局域网ip进行连接。两端都需要安装客户端。服务端不开源（ZeroTier官方提供），客户端开源。基本可以跑满宽带。 Softether❤官网：SoftEther VPN Project 描述：SoftEther VPN项目的开发和销售SoftEther VPN，一个开源的免费​跨平台多协议的VPN方案，作为筑波大学的一个学术项目筑波大学。 DDNS 前提是有公网IP(一般都是动态IP) 对比ngrok,n2n,frp 都研究过也基本用过, n2n 使用相对较久。 n2n是 p2p,打洞,但速率根据实际网络环境而决定。 最终,发现了 zerotier,呵呵,这特么才是 p2p,速度直接跑满宽带.虽然刚连接上还是需要找中心服务器握手,但是后期确实可以建立直联跑满带宽.其次,zerotier 可以自己搭建国内私有握手服务器(moon),握手速度超快,真心爽爆了 n2n 只要知道域和密码就能连接进来,有时候还是不太放心的,而 zerotier 是有管理界面的,虽说也是托管在官方,但是相对来说,还是安心不少的 ngrok/frp 两者相似但 frp 功能较为丰富 开源 ngrok 和 frp 严重依赖于公网固定 IP 的 VPS，是一个中性化的内网穿透工具，一旦中心挂掉，那么所有的节点都无法工作 n2n 开源 SuperNode EdgeNode zerotier 操作快捷方便 中转服务器 moon（加速器，非必需） 操作参考链接Appin softether 开源 最显著的优势是完全可以自建，通过带公网 ip 服务器反向连接，方便的 gui 管理界面，nb 的二层级联，3 层路由，32 线程 https 连接，可以将多台服务器连接在一起通过 iproute2 组网多出口，支持 n 多常用客户端 l2tp openvpn sstp 优点：Softether 穿透后，你电脑拿到的 IP 就是家里路由的内网 IP，所以局域网唤醒这种小事是肯定支持的，因为人家是 L2TP 二层穿透，这包含了 VLAN 和 DHCP，和你实际在家一模一样 缺点：目前比下来相对 tinc 就少了个去中心化的 mesh vpn。虽然作者说是支持 mesh 形式，但不知道如何配置。在 mtk7620 这种路由也有 4MB/s 的速度，非常不错。 任意 vps 和你内网的电脑上都装上 Softether，使用 l2tp 互联后，你不光可以穿透，你还可以像我一样，人在广州，但是可以连回上海的家里，使用路由器分配的上海 IP。。。。这个简直是神器。虽然 l2tp 也不神秘，可是这货是 GUI 配置。 DDNS 动态公网IP 以上经验之谈]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>VPN</tag>
        <tag>Frp</tag>
        <tag>N2n</tag>
        <tag>Ngrok</tag>
        <tag>Zerotier</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VSCode设置中文显示]]></title>
    <url>%2Fposts%2FVSCode%20setting%20Chinese%20display%2F</url>
    <content type="text"><![CDATA[Vscode是一款开源的跨平台编辑器。默认情况下，vscode使用的语言为英文(us)，如何将其显示语言修改成中文了？ 打开vscode工具； 使用快捷键组合【Ctrl+Shift+p】，在搜索框中输入configure display language，点击确定后； 修改locale.json文件下的属性“locale”为zh-CN; 重启vscode工具； 如果重启后vscode菜单等仍然是英文显示，在商店查看已安装的插件，把中文插件重新安装一遍（如下图），然后在重启工具。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wordpress修改数据表前缀]]></title>
    <url>%2Fposts%2Fwordpress-modify-data-table-prefix%2F</url>
    <content type="text"><![CDATA[一个数据库里可能有多个数据表，为了更美观、更好直观的区分和统计数据，同时一定程度上避免数据的混淆，修改部分数据表的前缀 使用phpMyAdmin批量修改Mysql数据表前缀的方法 此例中假定修改数据库中 cusle 数据库 前缀为“wpcusle_”，并将所有符合条件表的前缀修改为“wp_”。 用phpMyAdmin打开要修改前缀的数据库cusle，执行以下SQL语句（其中加粗斜体字是需要根据实际需求替换的）： 123456Select CONCAT( 'ALTER TABLE ', table_name, ' RENAME TO ', replace(table_name,'wpcusle_','wp_'),';')from information_schema.tableswhere TABLE_SCHEMA = 'cusle' and table_name LIKE 'wpcusle_%'; 在执行SQL语句生成的页面上点击“导出”，选择“自定义”-&gt;“直接显示为文本”，CSV格式，清空“内容分隔符”为空 执行导出功能后，到达结果窗口如下，复制文本框中的内容 进入数据库“cusle”的SQL执行窗口，将代码粘贴到SQL文本框中，执行。刷新数据库后我们就能发现该数据库的表前缀均已变成 wp_。 继续点击『SQL』按钮，运行以下 SQL 语句，修改 options 和 usermeta 表中的数据： 12update boke_options set option_name = replace(option_name,'wpcusle_','wp_');update boke_usermeta set meta_key = replace(meta_key,'wpcusle_','wp_'); 注意事项数据操作有风险，请在操作前备份数据。由于软件版本等原因，操作仅供参考，因本文修改数据库导致丢失或出错的，本文作者不承担责任。]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wordpress搬家换域名]]></title>
    <url>%2Fposts%2Fwordpress-move-and-change-domain-name%2F</url>
    <content type="text"><![CDATA[Σ(っ °Д °;)っ瞎折腾 wordpress搬家 将备份好的数据放到网站根目录 新建数据表导入数据 修改根目录下wp-config.php 123456/** WordPress数据库的名称 */define('DB_NAME', '填写你的数据库名称');/** MySQL数据库用户名 */define('DB_USER', '填写你的数据库账号');/** MySQL数据库密码 */define('DB_PASSWORD', '填写你的数据库密码'); wordpress换域名登陆phpMyAdmin后台，点sql把下面的代码复制进去，把旧域名改成你本地的域名，新域名改成你正式的域名，然后执行即可 1234UPDATE wp_posts SET post_content = replace( post_content, '旧域名','新域名') ;UPDATE wp_comments SET comment_content = replace(comment_content, '旧域名', '新域名') ;UPDATE wp_comments SET comment_author_url = replace(comment_author_url, '旧域名', '新域名') ;UPDATE wp_options SET option_value = replace( option_value , '旧域名','新域名') ; 一般到这里就结束了，出现的问题根据提示解决 打开网站可能会出现几行乱码，不用担心登陆一下后台更新一下wordpress，或者插件既可以解决]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[AppStore_iTunes_旧版App抓包]]></title>
    <url>%2Fposts%2Fappstoreitunes-legacy-app-capture%2F</url>
    <content type="text"><![CDATA[我们不得不说有些软件应用的版本越新，使用感越差！ 前言 从 iTunes 12.7 开始，Apple 去掉了 App Store 功能，也就无法在电脑上下载和管理 App 安装包，非常不方便。 之后 Apple 又出了 iTunes 12.6.3 特殊版本，重新加入了从 App Store 功能，可以下载和管理各个App的 ipa 安装包。 目前 iTunes 12.6.3 又更新至 iTunes 12.6.5 版本，也有App Store 功能。 查询APP版本号和ID: https://tools.lancely.tech/apple/app-historyiTunes iTunes 12.6.5 macOS：官网地址,点击下载 Windows 64 bit：官网地址,点击下载 Windows 32 bit：官网地址,点击下载iTunes 12.6.4 macOS：官网地址,点击下载 Windows 64 bit：官网地址,点击下载 Windows 32 bit：官网地址,点击下载iTunes 12.6.3 macOS：官网地址,点击下载 Windows 64 bit：官网地址,点击下载 Windows 32 bit：官网地址,点击下载 Fiddler 官网下载 https://www.telerik.com/fiddler 简单的步骤: Fidder 开启 HTTPS 抓包功能. 设置拦截关键字: [ bpu MZBuy.woa/wa/bayProduct ]. 在iTunes中登陆你的Apple ID并搜索想要下载的APP. 在iTunes中点击 获取 . 在Fidder中看到有个被拦截的请求,定位到STRING字段,修改成想要- 的版本的ID号并放行. 待下载完,从iTunes安装至手机即可. 备注 如何去除旧版本app store更新提醒 修改电脑上ipa后缀名为zip，打开删除里面的“iTunesMetadata.plist”文件； 后缀改回.ipa，使用助手安装。 存到云盘使用 捷径Shortcut安装（原Workflow） IOS常用旧版软件ID整理分享 详情见：https://www.jianshu.com/p/5a28dacba975]]></content>
      <categories>
        <category>Apple</category>
      </categories>
      <tags>
        <tag>iTunes</tag>
        <tag>App Store</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OpenConnect-ocserv]]></title>
    <url>%2Fposts%2Fopenconnect-ocserv%2F</url>
    <content type="text"><![CDATA[为了能够获取知识，满足对知识的渴望，科学上网必不可少，这是另一种选择？本文来源：见参考文章 。本文仅做记录 特点: 支持各种加速; 支持纯TCP模式; 支持TCP,UDP混合模式; 支持用户分组; 支持路由表分流; 支持用户组区分路由表; 支持休眠,断线重连; 支持各种验证方式; 安装平台不受限制的; 原生支持各种客户端: 脚本1-Vicer大佬的（简单）Windows, WindosPhone, macOS, iPhone, Android, OpenWRT… ocserv+锐速一键脚本附带用户管理.使用说明没有完整的写入脚本,详情请看介绍,或自行摸索.注意:支持OpenVZ,但不会自动安装锐速. 环境要求以下步骤在 Debian 7 和 Debian 8 下均通过测试.(其他环境未测试)已重新编译安装包,路由表已增加至200条. 说明: 参数使用介绍: -install #在有其他参数时,第一步进行安装. -add 【用户名】【密码】 #密码登陆模式下添加一个用户. -del 【用户名】 #密码登录模式下删除一个用户. -use 【Cert/Password】 #切换登陆方式,密码或证书. -route/-noroute #添加路由表,两个参数不能同时使用.#-route参数一般用于android机器(由于android平台限制).#-noroute参数推荐使用,除android机器外都使用此参数. 参数可以在规则内任意搭配使用. 示例: 安装并添加no-route路由表.bash ocserv.sh -install -noroute 安装并添加route路由表.bash ocserv.sh -install -route 添加no-route路由表和一个用户名和密码均为Test的用户.bash ocserv.sh -noroute -add Test Test 删除一个用户名为Test的用户.bash ocserv.sh -del Test 切换使用证书登陆(cret不区分大小写.需要安装时选择配置为证书登录,否则可能无法正常运行.)bash ocserv.sh -use Cert 切换使用密码登陆(password不区分大小写.)bash ocserv.sh -use password 下载:wget --no-check-certificate -qO ocserv.sh &apos;https://moeclub.org/attachment/LinuxShell/ocserv.sh&apos; &amp;&amp; chmod a+x ocserv.sh 脚本2-翻跃次元 （功能齐全但无路由表和网络优化） 建议自行安装 BBR和路由表- 如秋水逸冰bbr 另一个脚本OpenConnect server(ocserv) 一键脚本 for deibian 7+，详情见连接 https://www.fanyueciyuan.info/fq/ocserv-debian.html 脚本3-doubi （方便） 一键 https://doub.io/vpnzy-7/ 编译 https://doub.io/vpnzy-6/ 简单用户管理 添加 VPN用户假设你要添加的账号用户名为 chrica ，那么命令如下： ocpasswd -c /etc/ocserv/ocpasswd chrica 输入后，服务器会提示你输入两次密码（不会显示，盲输），如下：12345# === 服务器输出示例 === #root@debian:~/ocserv/ocserv-0.11.8# ocpasswd -c /etc/ocserv/ocpasswd chricaEnter password:Re-enter password:# === 服务器输出示例 === # 删除 VPN用户 注意：删除/锁定/解锁 VPN用户都没有任何提示！ ocpasswd -c /etc/ocserv/ocpasswd -d chrica 锁定 VPN用户 ocpasswd -c /etc/ocserv/ocpasswd -l chrica 解锁 VPN用户 ocpasswd -c /etc/ocserv/ocpasswd -u chrica 客户端下载: 注：Cisco发布了新版的AnyConnect APP，原有APP已更名为Cisco Legacy Anyconnect，下载新版即可。 下载见链接底部；https://moeclub.org/2017/04/15/130/ Windos: Linux: macOS: Android: Android(推荐): WindowsPhone: iPhone: 参考文章 https://moeclub.org/2017/06/22/268/?v=620 https://www.fanyueciyuan.info/fq/ocserv-debian.html https://doub.io/search/ocserv]]></content>
      <categories>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Cisco</tag>
        <tag>ocserv</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker入门]]></title>
    <url>%2Fposts%2Fgetting-started-with-docker%2F</url>
    <content type="text"><![CDATA[新项目与原项目使用环境不符，又要建立新的服务器，环境搭建繁琐，这时候Docker的优势就出来了。 官方描述Docker是一个开放源代码软件项目，让应用程序布署在软件容器下的工作可以自动化进行，借此在Linux操作系统上，提供一个额外的软件抽象层，以及操作系统层虚拟化的自动管理机制。Docker利用Linux核心中的资源分脱机制，例如cgroups，以及Linux核心名字空间，来创建独立的软件容器。 Docker通常用于如下场景： web应用的自动化打包和发布； 自动化测试和持续集成、发布； 在服务型环境中部署和调整数据库或其他的后台应用； 从头编译或者扩展现有的OpenShift或Cloud Foundry平台来搭建自己的PaaS环境。 官方入门教程https://docs.docker.com/get-started/ 支持平台桌面 Platform x86_64 Docker for Mac (macOS) yes Docker for Windows (Microsoft Windows 10) yes 服务器 Platform x86_64/amd64 ARM ARM64 / AARCH64 IBM Power (ppc64le) IBM Z (s390x) CentOS yes yes Debian yes yes yes Fedora yes Ubuntu yes yes yes yes yes 基本操作 本文以 Debian/Ubuntu 操作系统作为参考 中国环境需要换源（不换源可能无法下载或下载极慢）安装docker.io包之前，需要先设置使用backports源编辑 /etc/apt/sources.list 文件，加入下面这一句： deb http://http.debian.net/debian jessie-backports main 安装docker docker.io包安装确保已经按照第一步的操作步骤添加了backports源，然后执行下面的命令。 $ sudo apt-get update $ sudo apt-get install docker.io 确认docker运行是否正常。 $ sudo docker run --rm hello-world 查看docker版本 $ docker version 官方的安装脚本一键安装 执行脚本方法如下： wget -qO- get.docker.com | bash 安装完成后，运行下面的命令，验证是否安装成功。 docker version 启动 Docker systemctl start docker 查看 Docker 启动状态 systemctl status docker 允许 Docker 开机自启 systemctl enable docker Debian 如何删除docker? Debian系统下面删除docker，要按照下面几个步骤来删除。 使用purge命令清除docker-io包。 $ sudo apt-get purge docker-io 或者用autoremove命令将不再使用的依赖的包删除掉。 $ sudo apt-get autoremove --purge docker-io 需要注意的是上面的命令只是删除了docker.io包，并不会删除下载的镜像，产生的容器文件，卷，已经用户创建的配置文件。如果你觉得不爽，可以用下面的命令干掉它们： $ rm -rf /var/lib/docker 然后手工删除创建的配置文件。 备注：docker这个名字已经被占用了，所以debian下面的docker的包的名字是docker.io。 常规卸载/删除 docker apt-get list installed | grep docker 查看 安装的docker内容 apt-get -y remove docker-* 删除安装的 docker 内容 部署服务拉取镜像docker pull ## docker pull teddysun/shadowsocks-libev 查询某个镜像docker search $name ## docker search redis 检查运行中的镜像 使用docker ps命令可以查看所有正在运行中的容器列表， docker ps 或者 docker ps -l docker images 使用docker inspect命令我们可以查看更详细的关于某一个容器的信息。 docker inspect Recap and cheat sheet ## List Docker CLI commands docker docker container --help ## Display Docker version and info docker --version docker version docker info ## Execute Docker image docker run hello-world ## List Docker images docker image ls ## List Docker containers (running, all, all in quiet mode) docker container ls docker container ls --all docker container ls -aq 创建配置文件略 启动容器如范例中，定义的端口是 9000，那么在启动容器时就需要将 9000 端口映射到宿主机的对外端口上。启动命令： docker run -d -p 9000:9000 -p 9000:9000/udp --name ss-libev -v /etc/shadowsocks-libev:/etc/shadowsocks-libev teddysun/shadowsocks-libev docker run：开始运行一个容器。 -d 参数：容器以后台运行并输出容器 ID。 -p 参数：容器的 9000 端口映射到本机的 9000 端口。默认是映射 TCP，当需要映射 UDP 时，那就再追加一次 UDP 的映射。冒号后面是容器端口，冒号前面是宿主机端口，可以写成一致，也可以不一致。 –name 参数：给容器分配一个识别符，方便将来的启动，停止，删除等操作。 -v 参数：挂载卷(volume)，冒号后面是容器的路径，冒号前面是宿主机的路径，可以写成一致，也可以不一致。 teddysun/shadowsocks-libev：这是拉取回来的镜像路径。 当然，这里也可以启动 Tag 为 alpine 的镜像命令： docker run -d -p 9000:9000 -p 9000:9000/udp --name ss-libev -v /etc/shadowsocks-libev:/etc/shadowsocks-libev teddysun/shadowsocks-libev:alpine 注意：此处仅作为演示，不能同时执行上面的这两个启动命令，因为端口都是 9000，产生冲突了。 停止容器利用如下命令可以停止正在运行中的容器： docker stop $name 此处的 $name 就是在启动容器那一步定义的容器的识别符 启动容器利用如下命令可以停止正在运行中的容器： docker start $name 此处的 $name 就是在启动容器那一步定义的容器的识别符 删除容器docker rm -f container-id 删除指定容器 docker rm $(docker ps -a -q) 删除所有容器 查看容器日志docker logs $name 创建镜像略 参考资料 https://docs.docker.com/ http://www.docker.org.cn https://teddysun.com/536.html]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MikrotikRouterOS基本操作]]></title>
    <url>%2Fposts%2Fmikrotik-routeros-basic-operation%2F</url>
    <content type="text"><![CDATA[本文讲述 Mikrotik RouterOS V6.42.6 快速上手操作 （PS：食用方法）]]></content>
      <categories>
        <category>软路由</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>Mikrotik Router</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DN42-Decentralized Network]]></title>
    <url>%2Fposts%2Fdn42-decentralized-network%2F</url>
    <content type="text"><![CDATA[关于 DN42 dn42是一个大型动态VPN ，它采用Internet技术（ BGP ，whois数据库， DNS等）。 由于边界网关协议， 参与者使用网络隧道（ GRE ， OpenVPN ， Tinc ， IPsec ）和交换路由相互连接。 网络地址在172.20.0.0/14范围内分配，并使用私有AS号以及ULA-Range（ fd00::/8 ）中的IPv6地址 。 dn42可用于学习网络和连接私人网络，如黑客空间或社区网络。 但最重要的是，在dn42中尝试路由很有趣！参与dn42主要用于学习BGP等路由技术，使用相当大的网络（~200 AS，~400前缀）。 dn42非常类似于互联网，因此它可以作为新想法的动手测试场，或者仅仅是为了学习你可能无法在互联网上做的真实网络内容（BGP多宿主，传输）。 与互联网相比最大的优势：如果你在网络中破坏某些东西，你就不会有任何大型网络运营商愤怒地对你大喊大叫。涨姿势！@ 前言相关的文献资料可能会比较少，需具备相应的网络知识和操作能力。相关的其他资料需要自行 Google 官方维基 https://wiki.dn42.us/Home 虽然同为去中心化网络，DN42并不是匿名的。如果你需要完全匿名化的网络，请使用Tor。 要求 你有至少一个24/7全天候运行的路由器。 任何Linux或BSD盒都可以变成路由器。 如果您的家庭路由器运行OpenWRT，您可以考虑将其用于dn42。 您的路由器能够通过Internet建立网络隧道（GRE，OpenVPN，IPSec，Tinc ……）。 请注意，您的网络运营商可能会过滤此类流量，例如在学校或大学中。 您通常了解网络和路由（即您已经听说过BGP，IGP，转发，并且您愿意配置BGP路由器，如Quagga或Bird） 加入 DN42 网络请参考官方的入门文档：https://dn42.net/howto/Getting-started 想法下一步编写中参考资料 DN42去中心化网络 DN42 DN42 入門指南]]></content>
      <categories>
        <category>Network</category>
      </categories>
      <tags>
        <tag>DNS</tag>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《下流社会》一书]]></title>
    <url>%2Fposts%2Fthe-book-underable-society%2F</url>
    <content type="text"><![CDATA[中产社会是怎么崩溃的, “ 未富先懒 ” ？ 下载链接 参考 《下流社会》——日本中产社会是怎么崩溃的 中国社会开始 “未富先懒” ？]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>Social</tag>
        <tag>Reform</tag>
        <tag>GDP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018上半年金融分析]]></title>
    <url>%2Fposts%2Ffinancial-analysis-in-the-first-half-of-2018%2F</url>
    <content type="text"><![CDATA[记得大跌是从2015年5月28日这天，上午10点半过后，第一波下跌开始，创业板领跌，高价股下跌，到下午2点40分后，更是一波3%幅度130多点的下跌，使市场上众多股票由涨停到跌停。市场表现瞬间引爆。第二天 市场开盘不到10分钟即开始延续昨日凶悍的下跌，一笔近乎直线的下跌猛然间跌到了4%。后来的救市、熔断。 2018年2月9日大跌 2018年6月19日大跌 2018年6月至7月P2P市场暴雷 2018年7月26日 拼多多PDD美国纳斯达克上市 参考文章 80后首富们的富上加富，不小心泄露了中国最底层的贫瘠 重启改革]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>Stock</tag>
        <tag>P2P</tag>
        <tag>Social</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo建站美化笔记]]></title>
    <url>%2Fposts%2Fhexo-website-landscaping-notes%2F</url>
    <content type="text"><![CDATA[最近开始玩博客next 5.1.7 旧版版本 NexT v5.1.x 更新，后面运行 hexo g 的时候老提示我升级，有强迫症的我又重新搭建了一下博客，升级到nexT主题更新到6.3.0备忘！！！下面是对hexo、nexT的配置文件进行详细的记录。这次准备把所用到的各个字段都进行记录，便于以后出现意外情况再次重建。hexo-theme-next 文章有点长来首音乐舒舒压 基本配置语言设置每个主题都会配置几种界面显示语言，修改语言只要编辑站点配置文件，找到 language 字段，并将其值更改为你所需要的语言(例如，简体中文)： language: zh-CN 网站标题、作者打开站点配置文件，修改这些值： 1234title: #博客标题subtitle: #博客副标题description: #博客描述author: #博客作者 注意： 配置文件要符合英文标点符号使用规范: 冒号后必须空格，否则会编译错误 域名与文章链接123456# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: #你的博客网址root: / #博客跟目录，如果你的博客在网址的二级目录下，在这里填上permalink: :year/:month/:day/:title/ # 文章链接permalink_defaults: 用于配置Url请求时的主要属性，Url我进行了优化。修改如下： 安装启用主题使用hexo init本地新建一个博客之后，下载最新的next主题。 12$ cd hexo$ git clone https://github.com/theme-next/hexo-theme-next themes/next GitHub安装说明 安装后，我们要启用我们安装的主题，与所有Hexo主题启用的模式一样。 当克隆/下载完成后，打开站点配置文件， 找到 theme 字段，并将其值更改为 next 。 1theme: next 主题风格NexT 主题目前提供了3中风格类似，但是又有点不同的主题风格，可以通过修改 主题配置文件 中的 Scheme 值来启用其中一种风格，例如我的博客用的是 Pisces 风格，只要把另外两个用#注释掉即可: 1234# Schemes#scheme: Muse#scheme: Mistscheme: Pisces 导航栏添加标签菜单新建标签页面，并在菜单中显示标签链接。标签页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。 (1) 在终端窗口下，定位到 Hexo 站点目录下。使用如下命令新建一名为 tags 页面: 1hexo new page "tags" (2) 编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下： 123title: 标签date: 2017-12-22 12:39:04type: "tags" (3) 在菜单中添加链接。编辑 主题配置文件 ，添加 tags 到 menu 中，如下: 1234menu: home: / archives: /archives tags: /tags (4) 使用时在你的文章中添加如下代码： 1234567---title: title namedate: 2017-12-12-22 12:39:04tags: - first tag - second tag--- 为了省事方便可以在hexo目录下\scaffolds\post.md添加相关的信息，每次打开新的页面，自动输入信息。根据需求自行修改 1234567891011121314---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;updated: &#123;&#123; date &#125;&#125;photos: tags: categories: toc: truemathjax: truecomments: true---&lt;!--more--&gt; 添加分类页面新建分类页面，并在菜单中显示分类链接。分类页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。 (1) 在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ： 1hexo new page categories (2) 编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。页面内容如下： 12345---title: 分类date: 2014-12-22 12:39:04type: "categories"--- (3) 在菜单中添加链接。编辑 主题配置文件 ， 添加 categories 到 menu 中，如下: 1234menu: home: / archives: /archives categories: /categories (4) 使用时在你的文章中添加如下代码： 12345---title: title namedate: 2017-12-12-22 12:39:04type: "categories"--- 侧边栏社交链接侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中。 (1) 链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址 || 图标： 123social: GitHub: **************** || github E-Mail: **************** || envelope 备注:如果没有指定图标（带或不带分隔符），则会加载默认图标。 (2) 设定链接的图标，对应的字段是 social_icons。其键值格式是: 匹配键: Font Awesome 图标名称， 匹配键与上一步所配置的链接的显示文本相同（大小写严格匹配），图标名称是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标: 1234567# Social Iconssocial_icons: enable: true # Icon Mappings GitHub: github Twitter: twitter 微博: weibo 友情链接编辑 ·主题配置文件· 添加： 友情链接配置示例 1234567# Blog rollslinks_icon: linklinks_title: Linkslinks_layout: block#links_layout: inlinelinks: CSDN: https://*****/***** 站点建立时间这个时间将在站点的底部显示，例如© 2017 - 2018。 编辑 主题配置文件，新增字段 since: 12配置示例since: 2017 开启打赏功能越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要主题配置文件去掉注释并填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能： 12345# Reward#reward_comment: 如果文章内容对你有帮助,您的支持将鼓励我继续创作！#wechatpay: /images/wechatpay.jpg#alipay: /images/alipay.jpg#bitcoin: /images/bitcoin.png 设置阅读全文在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 阅读全文 按钮，可以通过以下方法：(1) 在文章中使用 &lt;!-- more --&gt; 手动进行截断，Hexo 提供的方式推荐(2) 在文章的 front-matter 中添加 description，并提供文章摘录(3) 自动形成摘要，在 主题配置文件 中添加： 123auto_excerpt: enable: true length: 150 默认截取的长度为 150 字符，可以根据需要自行设定 建议使用 &lt;!-- more --&gt;（即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。（本站采用方式） 修改文章底部的那个带#号的标签修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成 &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 站内搜索NexT 支持集成 Swiftype、 微搜索、Local Search 和 Algolia。在这里我使用的是Local Search，下面将介绍如何使用: (1) 添加百度/谷歌/本地 自定义站点内容搜索，安装 hexo-generator-searchdb，在站点的根目录下执行以下命令： 1npm install hexo-generator-searchdb --save (2) 编辑 站点配置文件，添加文件： 123456#Local Searchsearch: path: search.xml field: post format: html limit: 10000 (3) 编辑 主题配置文件，启用本地搜索功能： 123# Local searchlocal_search: enable: true 其他搜索方式请查看搜索服务 文章图片文章插入图片利用标签引用（未使用） markdown引用 本站采用方式 对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 config.yml 文件中的 post_asset_folder 选项设为 true 来打开。 12_config.ymlpost_asset_folder: true 当资源文件管理功能打开后，Hexo将会在你每一次通过 hexo new [layout] &lt;title&gt; 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。 相对路径引用的标签插件（笔者在尝试Hexo3的标签时出现了一些错误还未解决，因此暂不演示该种方式来引用图片） 通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。 123&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; 比如说：当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法![](/example.jpg)，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作） 正确的引用图片方式是使用下列的标签插件而不是 markdown ： 1&#123;% asset_img example.jpg This is an example image %&#125; 通过这种方式，图片将会同时出现在文章和主页以及归档页中。 利用makdown引用（插入本地图片）安装 1npm install hexo-asset-image --save 之后就可以按照正常的方法使用的，比如： 1我现在写了一个段落，并且想在这个段落的某一个地方[图片上传失败...(image-43fc5f-1510018038370)]引入一张图片 不蒜子统计（未开启） 备注：此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后 (1) 全局配置。编辑 主题配置文件 中的 busuanzi_count的配置项。当enable: true 时，代表开启全局开关。若 site_uv 、site_pv 、page_pv 的值均为 false 时，不蒜子仅作记录而不会在页面上显示。 (2) 站点UV配置。当 site_uv: true时，代表在页面底部显示站点的UV值。site_uv_header 和 site_uv_footer 为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为 [site_uv_header]UV值[site_uv_footer]。 1234# 效果：本站访客数12345人次site_uv: truesite_uv_header: 本站访客数site_uv_footer: 人次 (3) 站点PV配置。当 site_pv: true时，代表在页面底部显示站点的PV值。site_pv_header 和 site_pv_footer 为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为 [site_pv_header]PV值[site_pv_footer]。 1234# 效果：本站总访问量12345次site_pv: truesite_pv_header: 本站总访问量site_pv_footer: 次 (4) Example: 123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class="fa fa-eye"&gt;&lt;/i&gt; 本站访客数 site_uv_footer: 次 # custom pv span for the whole site site_pv: true site_pv_header: 本站总访问量 site_pv_footer: 次 # custom pv span for one page only page_pv: false page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; page_pv_footer: leancloud阅读次数统计（未开启） GitHub官方文档 相关注意事项请参考Doublemine的为NexT主题添加文章阅读量统计功能 (1) 先在 leancloud 官网上注册账号获取 app_id 、app_key (2) 终端窗口下，定位到 Hexo 站点目录下输入一下命令 1npm install hexo-leancloud-counter-security --save (3) 打开hexo站点文件_config.yml 123456leancloud_counter_security: enable_sync: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt;&gt; username: &lt;&lt;your username&gt;&gt; # Will be asked while deploying if is left blank password: &lt;&lt;your password&gt;&gt; # Recommmended to be left blank. Will be asked while deploying if is left blank (4) 打开next主题文件_config.yml 1234567leancloud_visitors: enable: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt;&gt; # Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security security: true # 不开启安全性的话选择：false betterPerformance: false 说明不开启安全性的情况下，直接选择步骤4就可以了！！！ symblos_count_time配置用于站点字数、阅读时间统计等。symblos_count_time在6.0.0以上版本替换了word_count，详细配置hexo根目录执行 1$ npm install hexo-symbols-count-time --save （1）站点文件 123456symbols_count_time: symbols: true time: true total_symbols: true total_time: true （2）主题文件 123456symbols_count_time: separated_meta: true item_text_post: true item_text_total: false awl: 4 wpm: 275 优化加载速度为了提高网站的加载速度，使用gulp对博文中的js、css、img等文件进行压缩。在博客的根目录执行以下命令 12$ npm install gulp -g$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save 然后在根目录中新建文件 gulpfile.js，并填入以下内容 123456789101112131415161718192021222324252627282930313233var gulp = require('gulp');var minifycss = require('gulp-minify-css');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');// 压缩 public 目录 cssgulp.task('minify-css', function() &#123; return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public'));&#125;);// 压缩 public 目录 htmlgulp.task('minify-html', function() &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public'))&#125;);// 压缩 public/js 目录 jsgulp.task('minify-js', function() &#123; return gulp.src('./public/**/*.js') .pipe(uglify()) .pipe(gulp.dest('./public'));&#125;);// 执行 gulp 命令时执行的任务gulp.task('default', [ 'minify-html','minify-css','minify-js']) 生成博文是执行hexo g &amp;&amp; gulp就会根据gulpfile.js中的配置，对public目录中的静态资源文件进行压缩。 评论系统来必力首先要注册来必力帐号，并获取用户的UID（查看具体方法）。然后打开主题目录的配置文件/next/_config.yml，定位到livere_uid字段，将UID填入即可 12345 # Support for LiveRe comments system. # You can get your uid from https://livere.com/insight/myCode (General web site) #livere_uid: your uid livere_uid: MTAyMC8z111111111 #例如至此，其他人就可以使用评论系统进行评论。 Valine来必力是韩国人开发的评论系统，一方面国内加载速度慢，另一方面评论需要登录，因此自己将博客的评论系统更换为Valine。有关Valine可以参考官方文档与原作者的博客：Valine – 一款极简的评论系统。 为 Hexo 博客 Next 主题添加 Valine 系统可以参考博客为你的 Hexo 加上评论系统-Valine。 主要有以下步骤： 到 LeanCloud 官网注册一个帐号 登录LeanCloud帐号，创建一个app应用，名字随便写 将App Id 和 App Key 配置到主题的配置文件valine字段下 12345678910valine: enable: true appid: your app id # your leancloud application appid appkey: your app key # your leancloud application appkey notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: ヾﾉ≧∀≦)o来啊，快活啊! avatar: mm # gravatar style guest_info: nick,mail,link # custom comment header pageSize: 10 # pagination size 注意：不同版本的主题app_id 和 app_key 这两个字段名是不一样的，复制的时候一定要看清楚。5.1.3版本字段名称是：appid 、appkey， 6.0.1版本的字段名称是：app_id、app_key。 底部版权声明 直接在next主题文件吧 false 改为 true 1234# Declare license on postspost_copyright: enable: true license: &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="external nofollow" target="_blank"&gt;CC BY-NC-SA 4.0&lt;/a&gt; FancyBox——jQuery弹出窗口插件 FancyBox是一款基于jquery开发的类Lightbox插件。支持对放大的图片添加阴影效果，对于一组相关的图片添加导航操作按纽，该lightbox除了能够展示图片之外，还可以展示iframed内容， 通过css自定义外观。 如果之前的是fancybox 2，要先删除fancybox，目录为themes/next/source/lib/fancybox, 下载模块 1$ git clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox 在next主题_config.yml中 false 改为 true 12345# Fancybox. There is support for old version 2 and new version 3.# Please, choose only any one variant, do not need to install both.# For install 2.x: https://github.com/theme-next/theme-next-fancybox# For install 3.x: https://github.com/theme-next/theme-next-fancybox3fancybox: true 添加热度NexT主题集成leanCloud，打开/themes/next/layout/_macro/post.swig， 搜索leancloud-visitors-count， 添加以下内容： 12&lt;span class="leancloud-visitors-count"&gt;&lt;/span&gt; // 在此处后面添加&lt;span&gt;℃&lt;/span&gt; 打开/themes/next/languages/zh-Hans.yml， 将visitors的内容改为热度即可。 文章加密功能 二选一，自由选择 (1)hexo-encypt配置用于文章加密。启用文章加密需要安装hexo-blog-encrypt，在hexo根目录下执行 1npm install hexo-blog-encrypt --save 找到根目录下的_config.yml文件，添加如下： 123# Securityencrypt: enable: true 启用加密功能需要在文章的Front-matter部分添加password字段即可。建议修改post.md模版，目录为hexo\scaffolds\。 123456789---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags: categories: password: #文章密码abstract: #文章摘要message: #密码提示--- 官方文档说明 (2)打开/themes/next/layout/_partials/head.swig， 在meta标签后面插入这样一段代码： 12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 然后文章中添加：password: 00000如下： 12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags: categories: password: #文章密码--- 如果 password 后面为空，则表示不用密码。 live2d配置用于站点吉祥物设置，作用应该是美化站点吧。手动/斜眼笑！想要吉祥物的话需要先安装hexo-helper-live2d，在hexo根目录下执行 1$ npm install --save hexo-helper-live2d Hexo的 _config.yml 文件或主题的 _config.yml 文件中添加配置. 12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false debug: false model: use: live2d-widget-model-wanko display: position: right width: 150 height: 300 mobile: show: true 详情请看官方文档。 footer设置 用于页脚设置，nexT6.3.0可以在配置文件中设置页脚。以前用5.X的时候，需要自己手工去修改。所以及时更新很重要哦。 1234567891011121314151617181920212223242526272829303132footer: # Specify the date when the site was setup. # If not defined, current year will be used. #since: 2015 # Icon between year and copyright info. icon: heart # Icon name in fontawesome, see: https://fontawesome.com/v4.7.0/icons # `heart` is recommended with animation in red (#ff0000). name: user # If you want to animate the icon, set it to true. animated: false # Change the color of icon, using Hex Code. color: "#808080" # If not defined, will be used `author` from Hexo main config. copyright: # #------------------------------------------------------ powered: # Hexo link (Powered by Hexo). enable: true # Version info of Hexo after Hexo link (vX.X.X). version: true theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false # ------------------------------------------------------------- # Any custom text can be defined here. #custom_text: Hosted by &lt;a target="_blank" rel="external nofollow" href="https://pages.coding.me"&gt;&lt;b&gt;Coding Pages&lt;/b&gt;&lt;/a&gt; Code Highlight theme设置用于代码主题设置。先在站点目录设置_config.yml 12345highlight: enable: true line_number: true auto_detect: true tab_replace: 再到主题目录设置_config.yml 1highlight_theme: night 注意事项直接使用 Tab 缩进代码是不会显示代码序号的，显示代码序号需要在一段代码前后加入小斜点 数学代码设置 后期应该会用 KaTeX 替代 MathJax Next主题中已集成hexo-renderer-marked插件，直接通过将主题 _config.yml 文件中搜索 math 选项enable设为 true 来打开方可。 123456math: enable: true # Default(true) will load mathjax/katex script on demand # That is it only render those page who has 'mathjax: true' in Front Matter. # If you set it to false, it will load mathjax/katex srcipt EVERY PAGE. per_page: true 别着急，这样还不够，还需要在文章的Front-matter里打开mathjax开关，如下： 123456---title: index.htmldate: 2018-07-23 21:01:30tags:mathjax: true-- Url持久化 我们可以发现hexo默认生成的文章地址路径是 【网站名称／年／月／日／文章名称】 使用了中文路径。这样会导致一个问题，在某些聊天工具或分享链接的时候会造成url转码变成很长一串难以读写的链接。 直接修改permalink打开站点配置文件_config.yml 搜索关键词permalink定位，可以看到默认的配置是： permalink: :year/:month/:day/:title/ 将其修改为 permalink: posts/:urlname/ urlname是在每篇博客的Front-matter中定义的一个变量。也是为每篇博客取的英文名字。 本篇文章的Front-matter如下 123456789101112---title: Hexo建站美化笔记toc: truemathjax: truecomments: truetags: - Hexocategories: - 笔记date: 2018-07-25 urlname: hexo-website-landscaping-notes--- 本文的URL就变成了hexo-website-landscaping-notes 这样的好处就是可以自由修改文章的title，URL保持不变同时文章图片链接也不会改变。 _post文件夹的优化 本博客对博客的.md文件直接存放在_post文件夹下的一级目录中，不设其他文件夹。理由有2： 博客的文章不会写太多，几百篇就很骄傲了。 对博客文件的命名采用时间+中文名字的方式，这样就可以自动按时间排序，一目了然。 例如本文的.md文件的文件名就是：20180725-Hexo建站美化笔记.md 然后在Front-matter的title中对自动生成的标题进行修改，去掉时间前缀20180725。 安装 hexo-abbrlink(不建议采用)npm install hexo-abbrlink --save 配置站点_config.yml 12345# permalink: :title/ 将之前的注释掉permalink: archives/:abbrlink.html # 自定义/:abbrlink.html abbrlink: alg: crc16 # 算法：crc16(default) and crc32 rep: dec # 进制：dec(default) and hex 安装 hexo-translate-title(不建议采用)npm install hexo-translate-title --save 修改站点主题 12345678910translate_title: translate_way: google # google,youdao,baidu_with_appid,baidu_no_appid is_need_proxy: false # true | false # proxy_url: http://localhost:50018 # Your proxy_url # youdao_api_key: '' # Your youdao_api_key # youdao_keyfrom: xxxx-blog # Your youdao_keyfrom # baidu_appid: '' # Your baidu_appid # baidu_appkey: '' # Your baidu_appkey# 修改原链接格式：permalink: :year/:month/:day/:title/permalink: :year:month:day/:translate_title.html ~~ 如果配置文件post_asset_folder: true 和安装插入本地图片 hexo-asset-image插件再安装以上两款插件会导致本地图片直接无法显示，外链显示正常。图片位置更改为source/images/xx下正常显示。 参考博客 hexo的next主题个性化教程:打造炫酷网站 Hexo博客Next主题优化总结 Hexo搭建博客教程 HEXO的站内链接和永久链接 hexo博客的URL优化 从WordPress迁移到Hexo 总结 配置文件字段名和字段值中间需要空格;部分插件安装、配置Hexo、nexT都需进行；文章中存在特殊符号，需要使用三个单引号以代码形式，不然会报错；所有配置文件icon都可以在fontawesome选择心仪的，替换即可；]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo的第一篇博客]]></title>
    <url>%2Fposts%2Fhexos-first-blog%2F</url>
    <content type="text"><![CDATA[开始Hexo的第一篇文章，创建博客的时间已经有两年的时间，从WordPress到Hexo给我的感觉真的轻便了很多，可能是我的WordPress装的插件太多，写了几篇文章就丢在那里了。（职业懒癌）(ಥ _ ಥ) 1、之前的 Wordpress 的文章并不打算迁移过来了，因为文章并不多，打算自己重新手敲一遍 2、服务器计划作为其他用途 3、练练Markdown的写法]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Life</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
